// Making variables for colors;
$white-color: #fff;
$black-color: #000;
$orange-color: #ff7f00;
$blue-color: #0000ff;
$purple-color: #80007e;
$green-color:#d8da3d;

// Mixin function for setting the border and text alignment.
@mixin setBorderandAlign($align: left, $border-width, $border-style, $border-color){
  text-align: $align;
  border: $border-width $border-style $border-color;
  cursor: pointer;
}

// Universal selector for reseting padding and margins of all elements initially and for initializing boder-box.
*{
  box-sizing: border-box;
  padding: 0;
  margin: 0;
}


// I have used short-hand property only when I needed to set all values otherwise I used specific property only.
// Using flexbox for aligning components column wise.
body{
  display: flex;
  color: $purple-color;
  background-color: $green-color;
  font: 1em  Georgia, 'Times New Roman', Times, serif;
}

// Navigation component 

nav{
  margin: 2em 2em 1em 0; // shorhand property -> margin: top right bottom left;
  
  // Making list style none.
  ul{
    list-style-type: none;
    
    // styling li tags for padding and border.
    li{
      background-color: $white-color;
      width: auto;
      margin: 0.5em;
      padding: 0.35em 2.5em 0.3em 0.3em;
      border-right: 1em solid $orange-color;
      
      // if list items are hyperlinks than they will inherit the color from body and underline for hyperlink will be removed.
      a{
        color: inherit;
        text-decoration: none;
      }
    }

    // Using pseudo selector :nth-child for selecting even childs of li and setting blue border-color.
    li:nth-child(even){
      border-right-color: $blue-color;
    }
    
  }
}

// Main component

main{
  // using flex-grow for main so it take all the remaining width of viewport width.
  width: auto;
  margin: 1em 1em 0 0;
  flex-grow: 2;

  // All the childs of main element would have margin at bottom by using universal selector and combinator.
  & > *{
    margin-bottom: 0.5em;
  }

  // As h1 is having different font family which is sans-serif.
  h1{
    margin-bottom: 0.7em;
    font-family: Helvetica, Geneva, Tahoma, sans-serif;
  }

  // I do not need to set border-color as it gets inherited by-default from body element.
  .main-text{
    border-bottom: 1px dotted;
    margin-bottom: 1em;
    
    // All the div elements of main-text class will get following styles.
    .div-text{
      margin-bottom: 1.2em;
      // Using pseudo selector :last-child for selcting the last p element of every section element. (main element).
      &:last-child {
        margin-bottom: 3em;
      }
    }
  }

  //  Giving bordered-text section a width.
  .bordered-text{
    width: 90%;
    
    // Setting general properties for div elements inside of bordered-text section.
    .div-text{
      color: $black-color;
      padding: 0.4em 0.2em;
      margin: 1em 0;
      font-size: 1.3em;
      @include setBorderandAlign(0, 2px, dashed, $black-color);
      
      // Setting the properties of 2nd <p> element using pseudo selector :nth-child(2)
      &:nth-child(2){
        font-style: italic;
        @include setBorderandAlign(right, 2px, dashed, $orange-color);
      }

      // Setting different properties of 3rd <p> element using pseudo selector :nth-child(3)
      &:nth-child(3){
        font-weight: 600;
        margin-bottom: 3em;
        @include setBorderandAlign(center, 1px, dashed, $blue-color);
      }

      &:hover{
        animation: bounce 1s ease-in-out 1 both;
        -webkit-animation: bounce 1s ease-in-out 1 both;
        -moz-animation: bounce 1s ease-in-out 1 both;
      }
    }
  
  }

  // sub-component address.
  // fonts having italic style.
  // Using @extend to inherit the properties of body.
  .address{
    @extend body;
    font-style: italic;
  }
}


// Using @keyframe for bouncy animations.
@keyframes bounce {
	0%, 100%, 20%, 50%, 80% {
		transform: translateY(0);
		-webkit-transform: translateY(0);
		-ms-transform: translateY(0);
	}
	40% {
		transform: translateY(-20px);
		-webkit-transform: translateY(-20px);
		-ms-transform: translateY(-20px);
	}
	60% {
		transform: translateY(-15px);
		-webkit-transform: translateY(-15px);
		-ms-transform: translateY(-15px);
	}
}